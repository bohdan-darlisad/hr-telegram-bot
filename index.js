require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');

const token = process.env.BOT_TOKEN;
const bot = new TelegramBot(token, { polling: true });

console.log('‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π!');

// =============================
// ID –≥—Ä—É–ø–∏ HR
// =============================
const HR_GROUP_CHAT_ID = -4977262255; // üëà —Ü–µ —Ç–≤–æ—è –≥—Ä—É–ø–∞ HR

// =============================
// –î–∞–Ω—ñ –≤–∞–∫–∞–Ω—Å—ñ–π
// =============================
const maleJobs = [
  {
    id: 'helper',
    title: 'üë®‚Äçüîß –†—ñ–∑–Ω–æ—Ä–æ–±–æ—á–∏–π',
    duties:
      '‚úÖ –í –æ—Å–Ω–æ–≤–Ω—ñ –æ–±–æ–≤‚Äô—è–∑–∫–∏ –≤—Ö–æ–¥–∏—Ç—å:\n' +
      '‚Ä¢ –î–æ–ø–æ–º–æ–≥–∞ –±—ñ–ª—è —Ä–æ–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤;\n' +
      '‚Ä¢ –ó–∞–ø—É—Å–∫ –∞–±–æ –ø–æ–¥–∞—á–∞ —è–≥—ñ–¥ –Ω–∞ –∫–æ–Ω–≤–µ—î—Ä.\n\n' +
      'üïí –ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏:\n' +
      '‚Ä¢ –ü–æ–∑–º—ñ–Ω–Ω–∏–π: 2 –¥–Ω—ñ –∑–º—ñ–Ω–∞ –∑ 8:00 –¥–æ 19:00 —Ç–∞ 2 –¥–Ω—ñ –≤ –Ω—ñ—á –∑ 19:00 –¥–æ 8:00;\n' +
      '‚Ä¢ –ü–æ—Ç—ñ–º 2 –¥–Ω—ñ –≤–∏—Ö—ñ–¥–Ω–∏—Ö.\n\n' +
      '‚òï –ü–µ—Ä–µ—Ä–≤–∏:\n' +
      '‚Ä¢ –ö–æ–∂–Ω—ñ 2 –≥–æ–¥–∏–Ω–∏ —î –ø–µ—Ä–µ—Ä–≤–∞ 20 —Ö–≤–∏–ª–∏–Ω;\n' +
      '‚Ä¢ –û–±—ñ–¥–Ω—è –ø–µ—Ä–µ—Ä–≤–∞ 30 —Ö–≤–∏–ª–∏–Ω.'
  }
];

const femaleJobs = [
  {
    id: 'sorter',
    title: 'üë©‚Äçüè≠ –°–æ—Ä—Ç—É–≤–∞–ª—å–Ω–∏—Ü—è',
    duties:
      '‚úÖ –í –æ—Å–Ω–æ–≤–Ω—ñ –æ–±–æ–≤‚Äô—è–∑–∫–∏ –≤—Ö–æ–¥–∏—Ç—å:\n' +
      '‚Ä¢ –ü–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è —è–≥—ñ–¥ –±—ñ–ª—è –∫–æ–Ω–≤–µ—î—Ä–Ω–∏—Ö –ª—ñ–Ω—ñ–π (–ª–∏—Å—Ç—è, –≥—ñ–ª–∫–∏);\n' +
      '‚Ä¢ –ö–∞–ª—ñ–±—Ä—É–≤–∞–Ω–Ω—è —è–≥–æ–¥–∏ (—Ü—ñ–ª–∞ –≤—ñ–¥ –ø–æ–¥—Ä—ñ–±–ª–µ–Ω–æ—ó).\n\n' +
      'üïí –ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏:\n' +
      '‚Ä¢ –ü–æ–∑–º—ñ–Ω–Ω–∏–π: 2 –¥–Ω—ñ –∑–º—ñ–Ω–∞ –∑ 8:00 –¥–æ 19:00 —Ç–∞ 2 –¥–Ω—ñ –≤ –Ω—ñ—á –∑ 19:00 –¥–æ 8:00;\n' +
      '‚Ä¢ –ü–æ—Ç—ñ–º 2 –¥–Ω—ñ –≤–∏—Ö—ñ–¥–Ω–∏—Ö.\n\n' +
      '‚òï –ü–µ—Ä–µ—Ä–≤–∏:\n' +
      '‚Ä¢ –ö–æ–∂–Ω—ñ 2 –≥–æ–¥–∏–Ω–∏ —î –ø–µ—Ä–µ—Ä–≤–∞ 20 —Ö–≤–∏–ª–∏–Ω;\n' +
      '‚Ä¢ –û–±—ñ–¥–Ω—è –ø–µ—Ä–µ—Ä–≤–∞ 30 —Ö–≤–∏–ª–∏–Ω.'
  }
];

// =============================
// –°—Ç–∞–Ω
// =============================
const userState = {};
const lastSelectedJob = {};

// =============================
// –ú–µ–Ω—é
// =============================
function mainKeyboard() {
  return {
    keyboard: [
      ['üë® –î–ª—è —á–æ–ª–æ–≤—ñ–∫—ñ–≤', 'üë© –î–ª—è –∂—ñ–Ω–æ–∫'],
      ['üìç –ù–∞—à–µ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è', 'üìû –ó–≤‚Äô—è–∑–∞—Ç–∏—Å—è –∑ HR'],
      ['üìù –ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É']
    ],
    resize_keyboard: true
  };
}

function showMainMenuWithGreeting(chatId, firstName) {
  userState[chatId] = 'main';
  const nameText = firstName ? `–ü—Ä–∏–≤—ñ—Ç, ${firstName}! üëã` : '–ü—Ä–∏–≤—ñ—Ç! üëã';
  const intro = `${nameText}\n–ú–∏ ‚Äî –∫–æ–º–ø–∞–Ω—ñ—è Darlisad, –ø—Ä–æ–≤—ñ–¥–Ω–∏–π –≤–∏—Ä–æ–±–Ω–∏–∫ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–∏—Ö —è–≥—ñ–¥ –≤ –£–∫—Ä–∞—ó–Ω—ñ.`;
  bot.sendMessage(chatId, `${intro}\n\n–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:`, {
    parse_mode: 'Markdown',
    reply_markup: mainKeyboard()
  });
}

function showMainMenu(chatId) {
  userState[chatId] = 'main';
  bot.sendMessage(chatId, '–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:', {
    reply_markup: mainKeyboard()
  });
}

// =============================
// /start
// =============================
bot.onText(/\/start/, (msg) => {
  showMainMenuWithGreeting(msg.chat.id, msg.from.first_name);
});

// =============================
// –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
// =============================
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;
  const state = userState[chatId] || 'main';

  // üìù –ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É
  if (text === 'üìù –ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É') {
    bot.sendMessage(
      chatId,
      '–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, —â–æ–± –Ω–∞—à HR –º—ñ–≥ –≤–∞–º –ø–µ—Ä–µ–¥–∑–≤–æ–Ω–∏—Ç–∏:',
      {
        reply_markup: {
          keyboard: [
            [
              {
                text: 'üì± –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Å–≤—ñ–π –Ω–æ–º–µ—Ä',
                request_contact: true
              }
            ],
            ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']
          ],
          resize_keyboard: true,
          one_time_keyboard: true
        }
      }
    );
    userState[chatId] = 'waiting_contact';
    return;
  }

  // –æ—Ç—Ä–∏–º–∞–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç
  if (msg.contact && state === 'waiting_contact') {
    const phoneNumber = msg.contact.phone_number;
    bot.sendMessage(
      chatId,
      `‚úÖ –î—è–∫—É—î–º–æ! –ú–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –≤–∞—à –Ω–æ–º–µ—Ä: ${phoneNumber}\n–ù–∞—à HR –∑–≤‚Äô—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.`,
      { reply_markup: mainKeyboard() }
    );
    userState[chatId] = 'main';

    // –ù–∞–¥—Å–∏–ª–∞—î–º–æ –≤ –≥—Ä—É–ø—É HR
    bot.sendMessage(
      HR_GROUP_CHAT_ID,
      `üì≤ –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞!\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ${phoneNumber}\n–í—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${msg.from.first_name} (@${msg.from.username || '–Ω–µ–º–∞—î —é–∑–µ—Ä–Ω–µ–π–º—É'})`
    );
    console.log(`üì≤ –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞: ${phoneNumber} (–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø—É HR)`);
    return;
  }

  // üìç –ù–∞—à–µ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è
  if (text === 'üìç –ù–∞—à–µ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è') {
    bot.sendMessage(
      chatId,
      'üìå –ù–∞—à–∞ –∞–¥—Ä–µ—Å–∞:\n–§—Ä—É–∫—Ç–æ–≤–∞ –≤—É–ª, 1, –ö–Ω—è–≥–∏–Ω–∏–Ω–æ–∫, –í–æ–ª–∏–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å, 45630',
      {
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: 'üåç –í—ñ–¥–∫—Ä–∏—Ç–∏ –≤ Google Maps',
                url: 'https://www.google.com/maps?q=–§—Ä—É–∫—Ç–æ–≤–∞+–≤—É–ª,+1,+–ö–Ω—è–≥–∏–Ω–∏–Ω–æ–∫,+–í–æ–ª–∏–Ω—Å—å–∫–∞+–æ–±–ª–∞—Å—Ç—å,+45630'
              }
            ]
          ]
        }
      }
    );
    return;
  }

  // üìû –ó–≤‚Äô—è–∑–∞—Ç–∏—Å—è –∑ HR
  if (text === 'üìû –ó–≤‚Äô—è–∑–∞—Ç–∏—Å—è –∑ HR') {
    bot.sendMessage(
      chatId,
      'üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏ –Ω–∞—à–æ–≥–æ HR:\n–¢–µ–ª–µ—Ñ–æ–Ω: +38 (050) 618 23 41\nEmail: hr@darlissad.com.ua\n–ú–∏ –±—É–¥–µ–º–æ —Ä–∞–¥—ñ –¥–æ–ø–æ–º–æ–≥—Ç–∏ –≤–∞–º!'
    );
    return;
  }

  // üë® –î–ª—è —á–æ–ª–æ–≤—ñ–∫—ñ–≤
  if (text === 'üë® –î–ª—è —á–æ–ª–æ–≤—ñ–∫—ñ–≤') {
    userState[chatId] = 'male_menu';
    const buttons = maleJobs.map(j => j.title);
    buttons.push('‚¨ÖÔ∏è –ù–∞–∑–∞–¥');
    bot.sendMessage(chatId, 'üìã –í–∞–∫–∞–Ω—Å—ñ—ó –¥–ª—è —á–æ–ª–æ–≤—ñ–∫—ñ–≤:', {
      reply_markup: { keyboard: [buttons], resize_keyboard: true }
    });
    return;
  }

  // üë© –î–ª—è –∂—ñ–Ω–æ–∫
  if (text === 'üë© –î–ª—è –∂—ñ–Ω–æ–∫') {
    userState[chatId] = 'female_menu';
    const buttons = femaleJobs.map(j => j.title);
    buttons.push('‚¨ÖÔ∏è –ù–∞–∑–∞–¥');
    bot.sendMessage(chatId, 'üìã –í–∞–∫–∞–Ω—Å—ñ—ó –¥–ª—è –∂—ñ–Ω–æ–∫:', {
      reply_markup: { keyboard: [buttons], resize_keyboard: true }
    });
    return;
  }

  // ‚¨ÖÔ∏è –ù–∞–∑–∞–¥
  if (text === '‚¨ÖÔ∏è –ù–∞–∑–∞–¥') {
    showMainMenu(chatId);
    return;
  }

  // –ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –≤–∞–∫–∞–Ω—Å—ñ–π
  if (state === 'male_menu') {
    const job = maleJobs.find(j => j.title === text);
    if (job) {
      if (lastSelectedJob[chatId] === job.title) return;
      lastSelectedJob[chatId] = job.title;
      bot.sendMessage(chatId, job.duties);
    }
    return;
  }

  if (state === 'female_menu') {
    const job = femaleJobs.find(j => j.title === text);
    if (job) {
      if (lastSelectedJob[chatId] === job.title) return;
      lastSelectedJob[chatId] = job.title;
      bot.sendMessage(chatId, job.duties);
    }
    return;
  }
});

// =============================
// –õ–æ–≤–∏–º–æ –ø–æ–º–∏–ª–∫–∏
// =============================
bot.on('polling_error', (err) => console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ polling:', err));
